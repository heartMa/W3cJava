<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.w3cjava.modules.test.dao.TestDao">
    <sql id="userColumns">
    	a.id,
    	a.login_name AS "loginName",
    	a.password,
    	a.no,
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.user_type,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.login_flag,
		a.photo,
		a.qrcode,
		a.sign,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag    	
    </sql>
    
    <sql id="userJoins">
    </sql>
	
	<!-- 根据编号获得用户 -->
	<select id="get" resultType="Test">
		SELECT
			<include refid="userColumns"/>
		FROM test a
		<include refid="userJoins"/>
		WHERE a.id = #{id}
	</select>
	<!-- 查询全部用户 -->
	<select id="findAllList" resultType="Test">
		SELECT
			<include refid="userColumns"/>
		FROM test a
		<include refid="userJoins"/>
		ORDER BY a.name
	</select>
	
		
	<!-- 插入用户 -->
	<insert id="insert">
		INSERT INTO test(
			id, 
			login_name, 
			password, 
			no, 
			name, 
			email, 
			phone, 
			mobile, 
			user_type, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			login_flag, 
			photo, 
			qrcode,
			del_flag
		) VALUES (
			#{id}, 
			#{loginName}, 
			#{password}, 
			#{no}, 
			#{name}, 
			#{email}, 
			#{phone}, 
			#{mobile}, 
			#{userType}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{loginFlag}, 
			#{photo}, 
			#{qrCode},
			#{delFlag}
		)
	</insert>
	
	<!-- 更新用户 -->
	<update id="update">
		UPDATE test SET 
			login_name = #{loginName}, 
			password = #{password}, 
			no = #{no}, 
			name = #{name}, 
			email = #{email}, 
			phone = #{phone}, 
			mobile = #{mobile}, 
			user_type = #{userType}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			login_flag = #{loginFlag},
			photo = #{photo},
			qrcode = #{qrCode}
		WHERE id = #{id}
	</update>
	
	<!-- 物理删除用户 -->
	<update id="delete">
		DELETE FROM test 
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除用户 -->
	<update id="deleteByLogic">
		UPDATE test SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>